# Generated by Django 5.2 on 2025-05-05 18:03

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('tags', models.CharField(blank=True, max_length=255, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('summary', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='ComposeEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('recipients', models.TextField(help_text='Comma-separated list of email addresses')),
                ('sender', models.EmailField(max_length=254)),
                ('cc', models.TextField(blank=True, help_text='Comma-separated list of CC email addresses', null=True)),
                ('bcc', models.TextField(blank=True, help_text='Comma-separated list of BCC email addresses', null=True)),
                ('attachments', models.FileField(blank=True, null=True, upload_to='emails/attachments/')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('subject', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('create_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Events_images/')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_month', models.CharField(blank=True, max_length=20, null=True)),
                ('end_month', models.CharField(blank=True, max_length=20, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('start_day', models.IntegerField(blank=True, null=True)),
                ('end_day', models.IntegerField(blank=True, null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('location', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='FeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('fees_payment_for', models.CharField(blank=True, max_length=50, null=True)),
                ('new_remaining_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('mode_of_payment', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forwarded_to', models.EmailField(max_length=254)),
                ('forwarded_at', models.DateTimeField(auto_now_add=True)),
                ('forwarded_by', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GoogleFormAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('link', models.URLField()),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='news_images/')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('thumbnail', models.ImageField(upload_to='notes_thumbnails/')),
                ('file', models.FileField(upload_to='notes_docs/')),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.PositiveIntegerField()),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('teacher', models.CharField(blank=True, max_length=255)),
                ('is_exam', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(blank=True, null=True)),
                ('registration_number', models.CharField(blank=True, max_length=50, null=True)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('reply_message', models.TextField()),
                ('replied_at', models.DateTimeField(auto_now_add=True)),
                ('replied_by', models.CharField(blank=True, max_length=100, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='replies/attachments/')),
            ],
        ),
        migrations.CreateModel(
            name='SiteLogo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo_name', models.CharField(default='My Website', max_length=100)),
                ('logo', models.ImageField(upload_to='logos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(default='Youth.jpg', upload_to='slider_images/')),
                ('sub_title', models.CharField(blank=True, max_length=50, null=True)),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('thumbnail', models.ImageField(upload_to='tutorial_thumbnails/')),
                ('video_file', models.FileField(upload_to='tutorial_videos/')),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
    ]
