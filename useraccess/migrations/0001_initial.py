# Generated by Django 5.2 on 2025-05-01 22:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CAT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image', models.ImageField(blank=True, default='Youth.jpg', null=True, upload_to='department-images')),
                ('is_tution', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Practical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('course_name', models.CharField(max_length=50)),
                ('level_of_study', models.IntegerField()),
                ('period_of_study', models.IntegerField()),
                ('reporting_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('date_joined', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Is customer')),
                ('is_employee', models.BooleanField(default=False, verbose_name='Is employee')),
                ('is_student', models.BooleanField(default=False, verbose_name='Is student')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Is teacher')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='course-images')),
                ('price', models.IntegerField(null=True)),
                ('period_of_study', models.IntegerField(null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, editable=False, max_length=10, null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='useraccess.department')),
            ],
        ),
        migrations.CreateModel(
            name='StudentApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('student_id', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('is_approved', models.BooleanField(default=False)),
                ('total_paid', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True)),
                ('total_fees', models.DecimalField(blank=True, decimal_places=2, default=0, editable=False, max_digits=10, null=True)),
                ('remaining_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('application_year', models.IntegerField(default=2025, editable=False)),
                ('registration_number', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='useraccess.course')),
                ('stud', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='studentapp', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PRACScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='pracs')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('prac', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pracmark', to='useraccess.practical')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='useraccess.studentapp')),
            ],
        ),
        migrations.CreateModel(
            name='CATScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='cats')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField()),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catmark', to='useraccess.cat')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='useraccess.studentapp')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_number', models.CharField(max_length=50, unique=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('is_approved', models.BooleanField(default=False)),
                ('staff_number', models.CharField(max_length=50, unique=True)),
                ('year_joined', models.IntegerField(default=2025, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='useraccess.course')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=15, null=True)),
                ('teacher', models.CharField(blank=True, max_length=15, null=True)),
                ('unit_code', models.CharField(blank=True, editable=False, max_length=15, null=True, unique=True)),
                ('created_by', models.CharField(blank=True, max_length=15, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='useraccess.course')),
            ],
        ),
        migrations.AddField(
            model_name='practical',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pracs', to='useraccess.unit'),
        ),
        migrations.AddField(
            model_name='cat',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cats', to='useraccess.unit'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('profile_picture', models.ImageField(default='default.jpg', upload_to='profile_pics/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('address', models.TextField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('hobbies', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
